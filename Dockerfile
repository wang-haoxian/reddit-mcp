# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# Use a Python image with uv pre-installed
FROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim AS uv

# Set the working directory in the container
WORKDIR /app

# Copy the project descriptor files for dependency installation
COPY pyproject.toml uv.lock /app/

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Install the project's dependencies using the lockfile and settings
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-install-project --no-dev --no-editable

# Then, add the rest of the project source code and install it
# Installing separately from its dependencies allows optimal layer caching
COPY src /app/src
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev --no-editable

# Create a minimal runtime image
FROM python:3.13-slim-bookworm

WORKDIR /app

COPY --from=uv /app/.venv /app/.venv

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Environment variables for HTTP mode (can be overridden)
ENV TRANSPORT=sse
ENV HOST=0.0.0.0
ENV PORT=8000

# Expose the port for HTTP/SSE mode
EXPOSE 8000

# Set the entry point for the container
# Use shell form to allow environment variable expansion
CMD ["sh", "-c", "python -m mcp_reddit --transport ${TRANSPORT} --host ${HOST} --port ${PORT}"]
